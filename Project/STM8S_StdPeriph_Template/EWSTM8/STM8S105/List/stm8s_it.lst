###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             11/Sep/2013  21:25:48 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\stm8s_it.c #
#    Command line =  "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\stm8s_it. #
#                    c" -e -Ohz --debug --code_model medium --data_model      #
#                    medium -o "C:\Documents and                              #
#                    Settings\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\Obj\"       #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0\stm8\LIB\dlstm8mmf.h" -D STM8S105 -lC      #
#                    "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\ST #
#                    M8S105\List\" -lA "C:\Documents and                      #
#                    Settings\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\List\" -I   #
#                    "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\.. #
#                    \" -I "C:\Documents and Settings\Administrator\Desktop\s #
#                    tm8s105k-controller\Project\STM8S_StdPeriph_Template\EWS #
#                    TM8\..\..\..\Libraries\STM8S_StdPeriph_Driver\inc\"      #
#                    --vregs 16                                               #
#    List file    =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\STM #
#                    8S105\List\stm8s_it.lst                                  #
#    Object file  =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\STM #
#                    8S105\Obj\stm8s_it.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\Desktop\stm8s105k-controller\Project\STM8S_StdPeriph_Template\stm8s_it.c
      1          /**
      2            ******************************************************************************
      3            * @file     stm8s_it.c
      4            * @author   MCD Application Team
      5            * @version  V2.1.0
      6            * @date     18-November-2011
      7            * @brief    Main Interrupt Service Routines.
      8            *           This file provides template for all peripherals interrupt service
      9            *           routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm8s_it.h"
     26          
     27          /** @addtogroup Template_Project
     28            * @{
     29            */
     30          
     31          /* Private typedef -----------------------------------------------------------*/
     32          /* Private define ------------------------------------------------------------*/
     33          #define data_size 10
     34          /* Private macro -------------------------------------------------------------*/
     35          /* Private variables ---------------------------------------------------------*/
     36          extern  volatile u16 timer1;
     37          extern  volatile u16 timer2;
     38          extern  volatile u16 timer3;
     39          extern  volatile u16 adcdata;
     40          extern  volatile u8 timeout;
     41          extern  volatile u8 rx_data;

   \                                 In section .near.bss, align 1
     42          extern  volatile u8 index=0;
   \                     index:
   \   000000                       DS8 1
     43          extern  volatile u8 seconds;
     44          extern  volatile u8 minutes;
     45          extern  volatile u8 hours;
     46          extern  bool Time_Display;
     47          //extern   u16  measure[data_size];
     48          
     49          /* Private function prototypes -----------------------------------------------*/
     50          /* Private functions ---------------------------------------------------------*/
     51          /* Public functions ----------------------------------------------------------*/
     52          
     53          #ifdef _COSMIC_
     54          /**
     55            * @brief Dummy Interrupt routine
     56            * @par Parameters:
     57            * None
     58            * @retval
     59            * None
     60          */
     61          INTERRUPT_HANDLER(NonHandledInterrupt, 25)
     62          {
     63            /* In order to detect unexpected events during development,
     64               it is recommended to set a breakpoint on the following instruction.
     65            */
     66          }
     67          #endif /*_COSMIC_*/
     68          
     69          /**
     70            * @brief TRAP Interrupt routine
     71            * @param  None
     72            * @retval None
     73            */

   \                                 In section .far_func.text, align 1
     74          INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
     75          {
     76            /* In order to detect unexpected events during development,
     77               it is recommended to set a breakpoint on the following instruction.
     78            */
     79          }
   \                     TRAP_IRQHandler:
   \                     _interrupt_1:
   \   000000 80                    IRET
     80          
     81          /**
     82            * @brief Top Level Interrupt routine.
     83            * @param  None
     84            * @retval None
     85            */

   \                                 In section .far_func.text, align 1
     86          INTERRUPT_HANDLER(TLI_IRQHandler, 0)
     87          
     88          {
     89            /* In order to detect unexpected events during development,
     90               it is recommended to set a breakpoint on the following instruction.
     91            */
     92          }
   \                     TLI_IRQHandler:
   \                     _interrupt_2:
   \   000000 80                    IRET
     93          
     94          /**
     95            * @brief Auto Wake Up Interrupt routine.
     96            * @param  None
     97            * @retval None
     98            */

   \                                 In section .far_func.text, align 1
     99          INTERRUPT_HANDLER(AWU_IRQHandler, 1)
    100          {
    101            /* In order to detect unexpected events during development,
    102               it is recommended to set a breakpoint on the following instruction.
    103            */
    104          }
   \                     AWU_IRQHandler:
   \                     _interrupt_3:
   \   000000 80                    IRET
    105          
    106          /**
    107            * @brief Clock Controller Interrupt routine.
    108            * @param  None
    109            * @retval None
    110            */

   \                                 In section .far_func.text, align 1
    111          INTERRUPT_HANDLER(CLK_IRQHandler, 2)
    112          {
    113            /* In order to detect unexpected events during development,
    114               it is recommended to set a breakpoint on the following instruction.
    115            */
    116          }
   \                     CLK_IRQHandler:
   \                     _interrupt_4:
   \   000000 80                    IRET
    117          
    118          /**
    119            * @brief External Interrupt PORTA Interrupt routine.
    120            * @param  None
    121            * @retval None
    122            */

   \                                 In section .far_func.text, align 1
    123          INTERRUPT_HANDLER(EXTI_PORTA_IRQHandler, 3)
    124          {
    125            /* In order to detect unexpected events during development,
    126               it is recommended to set a breakpoint on the following instruction.
    127            */
    128          }
   \                     EXTI_PORTA_IRQHandler:
   \                     _interrupt_5:
   \   000000 80                    IRET
    129          
    130          /**
    131            * @brief External Interrupt PORTB Interrupt routine.
    132            * @param  None
    133            * @retval None
    134            */

   \                                 In section .far_func.text, align 1
    135          INTERRUPT_HANDLER(EXTI_PORTB_IRQHandler, 4)
    136          {
    137            /* In order to detect unexpected events during development,
    138               it is recommended to set a breakpoint on the following instruction.
    139            */
    140          }
   \                     EXTI_PORTB_IRQHandler:
   \                     _interrupt_6:
   \   000000 80                    IRET
    141          
    142          /**
    143            * @brief External Interrupt PORTC Interrupt routine.
    144            * @param  None
    145            * @retval None
    146            */

   \                                 In section .far_func.text, align 1
    147          INTERRUPT_HANDLER(EXTI_PORTC_IRQHandler, 5)
    148          {
    149            /* In order to detect unexpected events during development,
    150               it is recommended to set a breakpoint on the following instruction.
    151            */
    152          }
   \                     EXTI_PORTC_IRQHandler:
   \                     _interrupt_7:
   \   000000 80                    IRET
    153          
    154          /**
    155            * @brief External Interrupt PORTD Interrupt routine.
    156            * @param  None
    157            * @retval None
    158            */

   \                                 In section .far_func.text, align 1
    159          INTERRUPT_HANDLER(EXTI_PORTD_IRQHandler, 6)
    160          {
    161            /* In order to detect unexpected events during development,
    162               it is recommended to set a breakpoint on the following instruction.
    163            */
    164          }
   \                     EXTI_PORTD_IRQHandler:
   \                     _interrupt_8:
   \   000000 80                    IRET
    165          
    166          /**
    167            * @brief External Interrupt PORTE Interrupt routine.
    168            * @param  None
    169            * @retval None
    170            */

   \                                 In section .far_func.text, align 1
    171          INTERRUPT_HANDLER(EXTI_PORTE_IRQHandler, 7)
    172          {
    173            /* In order to detect unexpected events during development,
    174               it is recommended to set a breakpoint on the following instruction.
    175            */
    176          }
   \                     EXTI_PORTE_IRQHandler:
   \                     _interrupt_9:
   \   000000 80                    IRET
    177          
    178          #ifdef STM8S903
    179          /**
    180            * @brief External Interrupt PORTF Interrupt routine.
    181            * @param  None
    182            * @retval None
    183            */
    184           INTERRUPT_HANDLER(EXTI_PORTF_IRQHandler, 8)
    185           {
    186            /* In order to detect unexpected events during development,
    187               it is recommended to set a breakpoint on the following instruction.
    188            */
    189           }
    190          #endif /*STM8S903*/
    191          
    192          #if defined (STM8S208) || defined (STM8AF52Ax)
    193          /**
    194            * @brief CAN RX Interrupt routine.
    195            * @param  None
    196            * @retval None
    197            */
    198           INTERRUPT_HANDLER(CAN_RX_IRQHandler, 8)
    199           {
    200            /* In order to detect unexpected events during development,
    201               it is recommended to set a breakpoint on the following instruction.
    202            */
    203           }
    204          
    205          /**
    206            * @brief CAN TX Interrupt routine.
    207            * @param  None
    208            * @retval None
    209            */
    210           INTERRUPT_HANDLER(CAN_TX_IRQHandler, 9)
    211           {
    212            /* In order to detect unexpected events during development,
    213               it is recommended to set a breakpoint on the following instruction.
    214            */
    215           }
    216          #endif /*STM8S208 || STM8AF52Ax */
    217          
    218          /**
    219            * @brief SPI Interrupt routine.
    220            * @param  None
    221            * @retval None
    222            */

   \                                 In section .far_func.text, align 1
    223          INTERRUPT_HANDLER(SPI_IRQHandler, 10)
    224          {
    225            /* In order to detect unexpected events during development,
    226               it is recommended to set a breakpoint on the following instruction.
    227            */
    228          }
   \                     SPI_IRQHandler:
   \                     _interrupt_12:
   \   000000 80                    IRET
    229          
    230          /**
    231            * @brief Timer1 Update/Overflow/Trigger/Break Interrupt routine.
    232            * @param  None
    233            * @retval None
    234            */

   \                                 In section .far_func.text, align 1
    235          INTERRUPT_HANDLER(TIM1_UPD_OVF_TRG_BRK_IRQHandler, 11)
    236          {
    237            /* In order to detect unexpected events during development,
    238               it is recommended to set a breakpoint on the following instruction.
    239            */
    240          }
   \                     TIM1_UPD_OVF_TRG_BRK_IRQHandler:
   \                     _interrupt_13:
   \   000000 80                    IRET
    241          
    242          /**
    243            * @brief Timer1 Capture/Compare Interrupt routine.
    244            * @param  None
    245            * @retval None
    246            */

   \                                 In section .far_func.text, align 1
    247          INTERRUPT_HANDLER(TIM1_CAP_COM_IRQHandler, 12)
    248          {
    249            /* In order to detect unexpected events during development,
    250               it is recommended to set a breakpoint on the following instruction.
    251            */
    252          }
   \                     TIM1_CAP_COM_IRQHandler:
   \                     _interrupt_14:
   \   000000 80                    IRET
    253          
    254          #ifdef STM8S903
    255          /**
    256            * @brief Timer5 Update/Overflow/Break/Trigger Interrupt routine.
    257            * @param  None
    258            * @retval None
    259            */
    260           INTERRUPT_HANDLER(TIM5_UPD_OVF_BRK_TRG_IRQHandler, 13)
    261           {
    262            /* In order to detect unexpected events during development,
    263               it is recommended to set a breakpoint on the following instruction.
    264            */
    265           }
    266          
    267          /**
    268            * @brief Timer5 Capture/Compare Interrupt routine.
    269            * @param  None
    270            * @retval None
    271            */
    272           INTERRUPT_HANDLER(TIM5_CAP_COM_IRQHandler, 14)
    273           {
    274            /* In order to detect unexpected events during development,
    275               it is recommended to set a breakpoint on the following instruction.
    276            */
    277           }
    278          
    279          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    280          /**
    281            * @brief Timer2 Update/Overflow/Break Interrupt routine.
    282            * @param  None
    283            * @retval None
    284            */

   \                                 In section .far_func.text, align 1
    285           INTERRUPT_HANDLER(TIM2_UPD_OVF_BRK_IRQHandler, 13)
    286           {
   \                     TIM2_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_15:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    287            /* In order to detect unexpected events during development,
    288               it is recommended to set a breakpoint on the following instruction.
    289            */
    290           timer2++;
   \   00000E CE0000                LDW       X, L:timer2
   \   000011 5C                    INCW      X
   \   000012 CF0000                LDW       L:timer2, X
    291           timer1++;
   \   000015 CE0000                LDW       X, L:timer1
   \   000018 5C                    INCW      X
   \   000019 CF0000                LDW       L:timer1, X
    292           timeout--;
   \   00001C C60000                LD        A, L:timeout
   \   00001F 4A                    DEC       A
   \   000020 C70000                LD        L:timeout, A
    293            if (timeout<=0) timeout=0;
   \   000023 C60000                LD        A, L:timeout
   \   000026 2604                  JRNE      L:??TIM2_UPD_OVF_BRK_IRQHandler_0
   \   000028 725F0000              CLR       L:timeout
    294          
    295          
    296          
    297           //ADC1_Cmd (ENABLE); //Start convert
    298           TIM2_ClearITPendingBit(TIM2_IT_UPDATE);
   \                     ??TIM2_UPD_OVF_BRK_IRQHandler_0:
   \   00002C A601                  LD        A, #0x1
   \   00002E 8D000000              CALLF     TIM2_ClearITPendingBit
    299          
    300           }
   \   000032 8D000000              CALLF     L:?pop_l1
   \   000036 8D000000              CALLF     L:?pop_l0
   \   00003A 80                    IRET
    301          
    302          /**
    303            * @brief Timer2 Capture/Compare Interrupt routine.
    304            * @param  None
    305            * @retval None
    306            */

   \                                 In section .far_func.text, align 1
    307           INTERRUPT_HANDLER(TIM2_CAP_COM_IRQHandler, 14)
    308           {
    309            /* In order to detect unexpected events during development,
    310               it is recommended to set a breakpoint on the following instruction.
    311            */
    312           }
   \                     TIM2_CAP_COM_IRQHandler:
   \                     _interrupt_16:
   \   000000 80                    IRET
    313          #endif /*STM8S903*/
    314          
    315          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S105) || \
    316              defined(STM8S005) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8AF626x)
    317          /**
    318            * @brief Timer3 Update/Overflow/Break Interrupt routine.
    319            * @param  None
    320            * @retval None
    321            */

   \                                 In section .far_func.text, align 1
    322           INTERRUPT_HANDLER(TIM3_UPD_OVF_BRK_IRQHandler, 15)
    323           {
   \                     TIM3_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_17:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    324            /* In order to detect unexpected events during development,
    325               it is recommended to set a breakpoint on the following instruction.
    326            */
    327          
    328          
    329             GPIO_WriteReverse(GPIOD, (GPIO_Pin_TypeDef)GPIO_PIN_0 );
   \   00000E A601                  LD        A, #0x1
   \   000010 AE500F                LDW       X, #0x500f
   \   000013 8D000000              CALLF     GPIO_WriteReverse
    330             timer3++;
   \   000017 CE0000                LDW       X, L:timer3
   \   00001A 5C                    INCW      X
   \   00001B CF0000                LDW       L:timer3, X
    331             seconds++;
   \   00001E C60000                LD        A, L:seconds
   \   000021 4C                    INC       A
   \   000022 C70000                LD        L:seconds, A
    332              if (seconds >=59)
   \   000025 C60000                LD        A, L:seconds
   \   000028 A13B                  CP        A, #0x3b
   \   00002A 250B                  JRC       L:??TIM3_UPD_OVF_BRK_IRQHandler_0
    333              {
    334                seconds=0;
   \   00002C 725F0000              CLR       L:seconds
    335                minutes++;
   \   000030 C60000                LD        A, L:minutes
   \   000033 4C                    INC       A
   \   000034 C70000                LD        L:minutes, A
    336              }
    337              if (minutes >= 59)
   \                     ??TIM3_UPD_OVF_BRK_IRQHandler_0:
   \   000037 C60000                LD        A, L:minutes
   \   00003A A13B                  CP        A, #0x3b
   \   00003C 2516                  JRC       L:??TIM3_UPD_OVF_BRK_IRQHandler_1
    338              {
    339                minutes=0;
   \   00003E 725F0000              CLR       L:minutes
    340                hours++;
   \   000042 C60000                LD        A, L:hours
   \   000045 4C                    INC       A
   \   000046 C70000                LD        L:hours, A
    341                if(hours >=23) hours=0;
   \   000049 C60000                LD        A, L:hours
   \   00004C A117                  CP        A, #0x17
   \   00004E 2504                  JRC       L:??TIM3_UPD_OVF_BRK_IRQHandler_1
   \   000050 725F0000              CLR       L:hours
    342              }
    343          
    344              Time_Display=TRUE;
   \                     ??TIM3_UPD_OVF_BRK_IRQHandler_1:
   \   000054 35010000              MOV       L:Time_Display, #0x1
    345             TIM3_ClearITPendingBit(TIM3_IT_UPDATE);
   \   000058 A601                  LD        A, #0x1
   \   00005A 8D000000              CALLF     TIM3_ClearITPendingBit
    346           }
   \   00005E 8D000000              CALLF     L:?pop_l1
   \   000062 8D000000              CALLF     L:?pop_l0
   \   000066 80                    IRET
    347          
    348          /**
    349            * @brief Timer3 Capture/Compare Interrupt routine.
    350            * @param  None
    351            * @retval None
    352            */

   \                                 In section .far_func.text, align 1
    353           INTERRUPT_HANDLER(TIM3_CAP_COM_IRQHandler, 16)
    354           {
    355            /* In order to detect unexpected events during development,
    356               it is recommended to set a breakpoint on the following instruction.
    357            */
    358           }
   \                     TIM3_CAP_COM_IRQHandler:
   \                     _interrupt_18:
   \   000000 80                    IRET
    359          #endif /*STM8S208, STM8S207 or STM8S105 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    360          
    361          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S103) || \
    362              defined(STM8S003) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8S903)
    363          /**
    364            * @brief UART1 TX Interrupt routine.
    365            * @param  None
    366            * @retval None
    367            */
    368           INTERRUPT_HANDLER(UART1_TX_IRQHandler, 17)
    369           {
    370              /* In order to detect unexpected events during development,
    371                 it is recommended to set a breakpoint on the following instruction.
    372              */
    373           }
    374          
    375          /**
    376            * @brief UART1 RX Interrupt routine.
    377            * @param  None
    378            * @retval None
    379            */
    380           INTERRUPT_HANDLER(UART1_RX_IRQHandler, 18)
    381           {
    382              /* In order to detect unexpected events during development,
    383                 it is recommended to set a breakpoint on the following instruction.
    384              */
    385           }
    386          #endif /*STM8S208 or STM8S207 or STM8S103 or STM8S903 or STM8AF62Ax or STM8AF52Ax */
    387          
    388          /**
    389            * @brief I2C Interrupt routine.
    390            * @param  None
    391            * @retval None
    392            */

   \                                 In section .far_func.text, align 1
    393          INTERRUPT_HANDLER(I2C_IRQHandler, 19)
    394          {
    395            /* In order to detect unexpected events during development,
    396               it is recommended to set a breakpoint on the following instruction.
    397            */
    398          }
   \                     I2C_IRQHandler:
   \                     _interrupt_21:
   \   000000 80                    IRET
    399          
    400          #if defined(STM8S105) || defined(STM8S005) ||  defined (STM8AF626x)
    401          /**
    402            * @brief    TX interrupt routine.
    403            * @param  None
    404            * @retval None
    405            */

   \                                 In section .far_func.text, align 1
    406           INTERRUPT_HANDLER(UART2_TX_IRQHandler, 20)
    407           {
    408              /* In order to detect unexpected events during development,
    409                 it is recommended to set a breakpoint on the following instruction.
    410              */
    411           }
   \                     UART2_TX_IRQHandler:
   \                     _interrupt_22:
   \   000000 80                    IRET
    412          
    413          /**
    414            * @brief UART2 RX interrupt routine.
    415            * @param  None
    416            * @retval None
    417            */

   \                                 In section .far_func.text, align 1
    418           INTERRUPT_HANDLER(UART2_RX_IRQHandler, 21)
    419           {
   \                     UART2_RX_IRQHandler:
   \                     _interrupt_23:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    420              /* In order to detect unexpected events during development,
    421                 it is recommended to set a breakpoint on the following instruction.
    422              */
    423             rx_data=UART2_ReceiveData8();
   \   00000E 8D000000              CALLF     UART2_ReceiveData8
   \   000012 C70000                LD        L:rx_data, A
    424             UART2_ClearITPendingBit(UART2_IT_RXNE);
   \   000015 AE0255                LDW       X, #0x255
   \   000018 8D000000              CALLF     UART2_ClearITPendingBit
    425          
    426           }
   \   00001C 8D000000              CALLF     L:?pop_l1
   \   000020 8D000000              CALLF     L:?pop_l0
   \   000024 80                    IRET
    427          #endif /* STM8S105 or STM8AF626x */
    428          
    429          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    430          /**
    431            * @brief UART3 TX interrupt routine.
    432            * @param  None
    433            * @retval None
    434            */
    435           INTERRUPT_HANDLER(UART3_TX_IRQHandler, 20)
    436           {
    437              /* In order to detect unexpected events during development,
    438                 it is recommended to set a breakpoint on the following instruction.
    439              */
    440           }
    441          
    442          /**
    443            * @brief UART3 RX interrupt routine.
    444            * @param  None
    445            * @retval None
    446            */
    447           INTERRUPT_HANDLER(UART3_RX_IRQHandler, 21)
    448           {
    449              /* In order to detect unexpected events during development,
    450                 it is recommended to set a breakpoint on the following instruction.
    451              */
    452           }
    453          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    454          
    455          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    456          /**
    457            * @brief ADC2 interrupt routine.
    458            * @param  None
    459            * @retval None
    460            */
    461           INTERRUPT_HANDLER(ADC2_IRQHandler, 22)
    462           {
    463              /* In order to detect unexpected events during development,
    464                 it is recommended to set a breakpoint on the following instruction.
    465              */
    466           }
    467          #else /*STM8S105, STM8S103 or STM8S903 or STM8AF626x */
    468          /**
    469            * @brief ADC1 interrupt routine.
    470            * @par Parameters:
    471            * None
    472            * @retval
    473            * None
    474            */

   \                                 In section .far_func.text, align 1
    475           INTERRUPT_HANDLER(ADC1_IRQHandler, 22)
    476           {
    477              /* In order to detect unexpected events during development,
    478                 it is recommended to set a breakpoint on the following instruction.
    479              */
    480             //ADC1_Cmd (DISABLE);
    481              /*
    482             ADC1_ClearFlag(ADC1_FLAG_EOC);
    483             adcdata = ADC1_GetConversionValue();
    484             measure[index++]=adcdata;
    485                if (index==data_size)
    486                {
    487                  measure[index]=0;
    488                  index=0;
    489                }
    490             ADC1_ClearITPendingBit(ADC1_IT_EOC);
    491               */
    492              //ADC1_Cmd (ENABLE);
    493              //ADC1_Cmd (ENABLE);  //Second Start conversion
    494           }
   \                     ADC1_IRQHandler:
   \                     _interrupt_24:
   \   000000 80                    IRET
    495          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    496          
    497          #ifdef STM8S903
    498          /**
    499            * @brief Timer6 Update/Overflow/Trigger Interrupt routine.
    500            * @param  None
    501            * @retval None
    502            */
    503          INTERRUPT_HANDLER(TIM6_UPD_OVF_TRG_IRQHandler, 23)
    504           {
    505            /* In order to detect unexpected events during development,
    506               it is recommended to set a breakpoint on the following instruction.
    507            */
    508           }
    509          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF52Ax or STM8AF62Ax or STM8AF626x */
    510          /**
    511            * @brief Timer4 Update/Overflow Interrupt routine.
    512            * @param  None
    513            * @retval None
    514            */

   \                                 In section .far_func.text, align 1
    515           INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 23)
    516           {
    517            /* In order to detect unexpected events during development,
    518               it is recommended to set a breakpoint on the following instruction.
    519            */
    520           }
   \                     TIM4_UPD_OVF_IRQHandler:
   \                     _interrupt_25:
   \   000000 80                    IRET
    521          #endif /*STM8S903*/
    522          
    523          /**
    524            * @brief Eeprom EEC Interrupt routine.
    525            * @param  None
    526            * @retval None
    527            */

   \                                 In section .far_func.text, align 1
    528          INTERRUPT_HANDLER(EEPROM_EEC_IRQHandler, 24)
    529          {
    530            /* In order to detect unexpected events during development,
    531               it is recommended to set a breakpoint on the following instruction.
    532            */
    533          }
   \                     EEPROM_EEC_IRQHandler:
   \                     _interrupt_26:
   \   000000 80                    IRET
    534          
    535          /**
    536            * @}
    537            */
    538          
    539          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     index                             1
     TRAP_IRQHandler                   1
     TLI_IRQHandler                    1
     AWU_IRQHandler                    1
     CLK_IRQHandler                    1
     EXTI_PORTA_IRQHandler             1
     EXTI_PORTB_IRQHandler             1
     EXTI_PORTC_IRQHandler             1
     EXTI_PORTD_IRQHandler             1
     EXTI_PORTE_IRQHandler             1
     SPI_IRQHandler                    1
     TIM1_UPD_OVF_TRG_BRK_IRQHandler
                                       1
     TIM1_CAP_COM_IRQHandler           1
     TIM2_UPD_OVF_BRK_IRQHandler      59
     TIM2_CAP_COM_IRQHandler           1
     TIM3_UPD_OVF_BRK_IRQHandler     103
     TIM3_CAP_COM_IRQHandler           1
     I2C_IRQHandler                    1
     UART2_TX_IRQHandler               1
     UART2_RX_IRQHandler              37
     ADC1_IRQHandler                   1
     TIM4_UPD_OVF_IRQHandler           1
     EEPROM_EEC_IRQHandler             1

 
 218 bytes in section .far_func.text
   1 byte  in section .near.bss
 
 218 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
