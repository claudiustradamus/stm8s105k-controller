###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             14/Aug/2013  17:29:20 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Users\Administrator\Desktop\stm8s105k-controller\Libr #
#                    aries\STM8S_StdPeriph_Driver\src\stm8s_exti.c            #
#    Command line =  C:\Users\Administrator\Desktop\stm8s105k-controller\Libr #
#                    aries\STM8S_StdPeriph_Driver\src\stm8s_exti.c -e -Ohz    #
#                    --debug --code_model medium --data_model medium -o       #
#                    C:\Users\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\Obj\        #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.0\stm8\LIB\dlstm8mmf.h" -D  #
#                    STM8S105 -lC C:\Users\Administrator\Desktop\stm8s105k-co #
#                    ntroller\Project\STM8S_StdPeriph_Template\EWSTM8\STM8S10 #
#                    5\List\ -lA C:\Users\Administrator\Desktop\stm8s105k-con #
#                    troller\Project\STM8S_StdPeriph_Template\EWSTM8\STM8S105 #
#                    \List\ -I C:\Users\Administrator\Desktop\stm8s105k-contr #
#                    oller\Project\STM8S_StdPeriph_Template\EWSTM8\..\ -I     #
#                    C:\Users\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\..\..\..\Libraries\S #
#                    TM8S_StdPeriph_Driver\inc\ --vregs 16                    #
#    List file    =  C:\Users\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\List\stm8s_ #
#                    exti.lst                                                 #
#    Object file  =  C:\Users\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\Obj\stm8s_e #
#                    xti.o                                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\stm8s105k-controller\Libraries\STM8S_StdPeriph_Driver\src\stm8s_exti.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm8s_exti.c
      4            * @author  MCD Application Team
      5            * @version V2.1.0
      6            * @date    18-November-2011
      7            * @brief   This file contains all the functions for the EXTI peripheral.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm8s_exti.h"
     24          
     25          /** @addtogroup STM8S_StdPeriph_Driver
     26            * @{
     27            */
     28          /* Private typedef -----------------------------------------------------------*/
     29          /* Private define ------------------------------------------------------------*/
     30          /* Private macro -------------------------------------------------------------*/
     31          /* Private variables ---------------------------------------------------------*/
     32          /* Private function prototypes -----------------------------------------------*/
     33          /* Private functions ---------------------------------------------------------*/
     34          
     35          /* Public functions ----------------------------------------------------------*/
     36          
     37          /**
     38            * @addtogroup EXTI_Public_Functions
     39            * @{
     40            */
     41          
     42          /**
     43            * @brief  Deinitializes the external interrupt control registers to their default reset value.
     44            * @param  None
     45            * @retval None
     46            */

   \                                 In section .far_func.text, align 1
     47          void EXTI_DeInit(void)
     48          {
     49              EXTI->CR1 = EXTI_CR1_RESET_VALUE;
   \                     EXTI_DeInit:
   \   000000 725F50A0              CLR       L:0x50a0
     50              EXTI->CR2 = EXTI_CR2_RESET_VALUE;
   \   000004 725F50A1              CLR       L:0x50a1
     51          }
   \   000008 87                    RETF
     52          
     53          /**
     54            * @brief  Set the external interrupt sensitivity of the selected port.
     55            * @warning
     56            * - The modification of external interrupt sensitivity is only possible when the interrupts are disabled.
     57            * - The normal behavior is to disable the interrupts before calling this function, and re-enable them after.
     58            * @param   Port The port number to access.
     59            * @param   SensitivityValue The external interrupt sensitivity value to set.
     60            * @retval None
     61            * @par Required preconditions:
     62            * Global interrupts must be disabled before calling this function.
     63            */

   \                                 In section .far_func.text, align 1
   \                     ?Subroutine0:
   \   000000 BF00                  LDW       S:?w1, X
   \   000002 5F                    CLRW      X
   \   000003 BF00                  LDW       S:?w0, X
   \   000005 AE0000                LDW       X, #`?<Constant "C:\\\\Users\\\\Administrato...">`
   \   000008 AC000000              JPF       assert_failed

   \                                 In section .far_func.text, align 1
     64          void EXTI_SetExtIntSensitivity(EXTI_Port_TypeDef Port, EXTI_Sensitivity_TypeDef SensitivityValue)
     65          {
   \                     EXTI_SetExtIntSensitivity:
   \   000000 8D000000              CALLF     L:?push_w4
   \   000004 B700                  LD        S:?b8, A
   \   000006 450000                MOV       S:?b9, S:?b0
     66          
     67              /* Check function parameters */
     68              assert_param(IS_EXTI_PORT_OK(Port));
   \   000009 2717                  JREQ      L:??CrossCallReturnLabel_1
   \   00000B A101                  CP        A, #0x1
   \   00000D 2713                  JREQ      L:??CrossCallReturnLabel_1
   \   00000F A102                  CP        A, #0x2
   \   000011 270F                  JREQ      L:??CrossCallReturnLabel_1
   \   000013 A103                  CP        A, #0x3
   \   000015 270B                  JREQ      L:??CrossCallReturnLabel_1
   \   000017 A104                  CP        A, #0x4
   \   000019 2707                  JREQ      L:??CrossCallReturnLabel_1
   \   00001B AE0044                LDW       X, #0x44
   \   00001E 8D000000              CALLF     ?Subroutine0
     69              assert_param(IS_EXTI_SENSITIVITY_OK(SensitivityValue));
   \                     ??CrossCallReturnLabel_1:
   \   000022 3D00                  TNZ       S:?b9
   \   000024 2715                  JREQ      L:??CrossCallReturnLabel_0
   \   000026 B600                  LD        A, S:?b9
   \   000028 A101                  CP        A, #0x1
   \   00002A 270F                  JREQ      L:??CrossCallReturnLabel_0
   \   00002C A102                  CP        A, #0x2
   \   00002E 270B                  JREQ      L:??CrossCallReturnLabel_0
   \   000030 A103                  CP        A, #0x3
   \   000032 2707                  JREQ      L:??CrossCallReturnLabel_0
   \   000034 AE0045                LDW       X, #0x45
   \   000037 8D000000              CALLF     ?Subroutine0
     70          
     71              /* Set external interrupt sensitivity */
     72              switch (Port)
   \                     ??CrossCallReturnLabel_0:
   \   00003B B600                  LD        A, S:?b8
   \   00003D 2710                  JREQ      L:??EXTI_SetExtIntSensitivity_0
   \   00003F 4A                    DEC       A
   \   000040 2719                  JREQ      L:??EXTI_SetExtIntSensitivity_1
   \   000042 4A                    DEC       A
   \   000043 2724                  JREQ      L:??EXTI_SetExtIntSensitivity_2
   \   000045 4A                    DEC       A
   \   000046 2738                  JREQ      L:??EXTI_SetExtIntSensitivity_3
   \   000048 4A                    DEC       A
   \   000049 2745                  JREQ      L:??EXTI_SetExtIntSensitivity_4
   \   00004B AC000000              JPF       L:?epilogue_w4
     73              {
     74              case EXTI_PORT_GPIOA:
     75                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PAIS);
   \                     ??EXTI_SetExtIntSensitivity_0:
   \   00004F C650A0                LD        A, L:0x50a0
   \   000052 A4FC                  AND       A, #0xfc
   \   000054 C750A0                LD        L:0x50a0, A
     76                  EXTI->CR1 |= (uint8_t)(SensitivityValue);
   \   000057 B600                  LD        A, S:?b9
   \   000059 201B                  JRA       ??EXTI_SetExtIntSensitivity_5
     77                  break;
     78              case EXTI_PORT_GPIOB:
     79                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PBIS);
   \                     ??EXTI_SetExtIntSensitivity_1:
   \   00005B C650A0                LD        A, L:0x50a0
   \   00005E A4F3                  AND       A, #0xf3
   \   000060 C750A0                LD        L:0x50a0, A
     80                  EXTI->CR1 |= (uint8_t)((uint8_t)(SensitivityValue) << 2);
   \   000063 B600                  LD        A, S:?b9
   \   000065 48                    SLL       A
   \   000066 48                    SLL       A
   \   000067 200D                  JRA       ??EXTI_SetExtIntSensitivity_5
     81                  break;
     82              case EXTI_PORT_GPIOC:
     83                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PCIS);
   \                     ??EXTI_SetExtIntSensitivity_2:
   \   000069 C650A0                LD        A, L:0x50a0
   \   00006C A4CF                  AND       A, #0xcf
   \   00006E C750A0                LD        L:0x50a0, A
     84                  EXTI->CR1 |= (uint8_t)((uint8_t)(SensitivityValue) << 4);
   \   000071 B600                  LD        A, S:?b9
   \   000073 4E                    SWAP      A
   \   000074 A4F0                  AND       A, #0xf0
   \                     ??EXTI_SetExtIntSensitivity_5:
   \   000076 CA50A0                OR        A, L:0x50a0
   \   000079 C750A0                LD        L:0x50a0, A
     85                  break;
   \   00007C AC000000              JPF       L:?epilogue_w4
     86              case EXTI_PORT_GPIOD:
     87                  EXTI->CR1 &= (uint8_t)(~EXTI_CR1_PDIS);
   \                     ??EXTI_SetExtIntSensitivity_3:
   \   000080 C650A0                LD        A, L:0x50a0
   \   000083 A43F                  AND       A, #0x3f
   \   000085 C750A0                LD        L:0x50a0, A
     88                  EXTI->CR1 |= (uint8_t)((uint8_t)(SensitivityValue) << 6);
   \   000088 B600                  LD        A, S:?b9
   \   00008A 8D000000              CALLF     L:?sll8_a_a_6
   \   00008E 20E6                  JRA       ??EXTI_SetExtIntSensitivity_5
     89                  break;
     90              case EXTI_PORT_GPIOE:
     91                  EXTI->CR2 &= (uint8_t)(~EXTI_CR2_PEIS);
   \                     ??EXTI_SetExtIntSensitivity_4:
   \   000090 C650A1                LD        A, L:0x50a1
   \   000093 A4FC                  AND       A, #0xfc
   \   000095 C750A1                LD        L:0x50a1, A
     92                  EXTI->CR2 |= (uint8_t)(SensitivityValue);
   \   000098 B600                  LD        A, S:?b9
   \   00009A CA50A1                OR        A, L:0x50a1
   \   00009D C750A1                LD        L:0x50a1, A
     93                  break;
     94              default:
     95                  break;
     96              }
     97          }
   \   0000A0 AC000000              JPF       L:?epilogue_w4
     98          
     99          /**
    100            * @brief  Set the TLI interrupt sensitivity.
    101            * @param   SensitivityValue The TLI interrupt sensitivity value.
    102            * @retval None
    103            * @par Required preconditions:
    104            * Global interrupts must be disabled before calling this function.
    105            */

   \                                 In section .far_func.text, align 1
    106          void EXTI_SetTLISensitivity(EXTI_TLISensitivity_TypeDef SensitivityValue)
    107          {
   \                     EXTI_SetTLISensitivity:
   \   000000 3B0000                PUSH      S:?b8
   \   000003 B700                  LD        S:?b8, A
    108              /* Check function parameters */
    109              assert_param(IS_EXTI_TLISENSITIVITY_OK(SensitivityValue));
   \   000005 270B                  JREQ      L:??CrossCallReturnLabel_2
   \   000007 A104                  CP        A, #0x4
   \   000009 2707                  JREQ      L:??CrossCallReturnLabel_2
   \   00000B AE006D                LDW       X, #0x6d
   \   00000E 8D000000              CALLF     ?Subroutine0
    110          
    111              /* Set TLI interrupt sensitivity */
    112              EXTI->CR2 &= (uint8_t)(~EXTI_CR2_TLIS);
   \                     ??CrossCallReturnLabel_2:
   \   000012 721550A1              BRES      L:0x50a1, #0x2
    113              EXTI->CR2 |= (uint8_t)(SensitivityValue);
   \   000016 B600                  LD        A, S:?b8
   \   000018 CA50A1                OR        A, L:0x50a1
   \   00001B C750A1                LD        L:0x50a1, A
    114          }
   \   00001E 320000                POP       S:?b8
   \   000021 87                    RETF
    115          
    116          /**
    117            * @brief  Get the external interrupt sensitivity of the selected port.
    118            * @param   Port The port number to access.
    119            * @retval EXTI_Sensitivity_TypeDef The external interrupt sensitivity of the selected port.
    120            */

   \                                 In section .far_func.text, align 1
    121          EXTI_Sensitivity_TypeDef EXTI_GetExtIntSensitivity(EXTI_Port_TypeDef Port)
    122          {
   \                     EXTI_GetExtIntSensitivity:
   \   000000 8D000000              CALLF     L:?push_w4
   \   000004 B700                  LD        S:?b9, A
    123              uint8_t value = 0;
   \   000006 3F00                  CLR       S:?b8
    124          
    125              /* Check function parameters */
    126              assert_param(IS_EXTI_PORT_OK(Port));
   \   000008 3D00                  TNZ       S:?b9
   \   00000A 2729                  JREQ      L:??EXTI_GetExtIntSensitivity_0
   \   00000C A101                  CP        A, #0x1
   \   00000E 272A                  JREQ      L:??EXTI_GetExtIntSensitivity_1
   \   000010 A102                  CP        A, #0x2
   \   000012 272D                  JREQ      L:??EXTI_GetExtIntSensitivity_2
   \   000014 A103                  CP        A, #0x3
   \   000016 2731                  JREQ      L:??EXTI_GetExtIntSensitivity_3
   \   000018 A104                  CP        A, #0x4
   \   00001A 2736                  JREQ      L:??EXTI_GetExtIntSensitivity_4
   \   00001C AE007E                LDW       X, #0x7e
   \   00001F 8D000000              CALLF     ?Subroutine0
    127          
    128              switch (Port)
   \                     ??CrossCallReturnLabel_3:
   \   000023 B600                  LD        A, S:?b9
   \   000025 270E                  JREQ      L:??EXTI_GetExtIntSensitivity_0
   \   000027 4A                    DEC       A
   \   000028 2710                  JREQ      L:??EXTI_GetExtIntSensitivity_1
   \   00002A 4A                    DEC       A
   \   00002B 2714                  JREQ      L:??EXTI_GetExtIntSensitivity_2
   \   00002D 4A                    DEC       A
   \   00002E 2719                  JREQ      L:??EXTI_GetExtIntSensitivity_3
   \   000030 4A                    DEC       A
   \   000031 271F                  JREQ      L:??EXTI_GetExtIntSensitivity_4
   \   000033 2024                  JRA       L:??EXTI_GetExtIntSensitivity_5
    129              {
    130              case EXTI_PORT_GPIOA:
    131                  value = (uint8_t)(EXTI->CR1 & EXTI_CR1_PAIS);
   \                     ??EXTI_GetExtIntSensitivity_0:
   \   000035 C650A0                LD        A, L:0x50a0
   \   000038 201B                  JRA       ??EXTI_GetExtIntSensitivity_6
    132                  break;
    133              case EXTI_PORT_GPIOB:
    134                  value = (uint8_t)((uint8_t)(EXTI->CR1 & EXTI_CR1_PBIS) >> 2);
   \                     ??EXTI_GetExtIntSensitivity_1:
   \   00003A C650A0                LD        A, L:0x50a0
   \   00003D 44                    SRL       A
   \   00003E 44                    SRL       A
   \   00003F 2014                  JRA       ??EXTI_GetExtIntSensitivity_6
    135                  break;
    136              case EXTI_PORT_GPIOC:
    137                  value = (uint8_t)((uint8_t)(EXTI->CR1 & EXTI_CR1_PCIS) >> 4);
   \                     ??EXTI_GetExtIntSensitivity_2:
   \   000041 C650A0                LD        A, L:0x50a0
   \   000044 4E                    SWAP      A
   \   000045 A40F                  AND       A, #0xf
   \   000047 200C                  JRA       ??EXTI_GetExtIntSensitivity_6
    138                  break;
    139              case EXTI_PORT_GPIOD:
    140                  value = (uint8_t)((uint8_t)(EXTI->CR1 & EXTI_CR1_PDIS) >> 6);
   \                     ??EXTI_GetExtIntSensitivity_3:
   \   000049 C650A0                LD        A, L:0x50a0
   \   00004C 8D000000              CALLF     L:?srl8_a_a_6
   \   000050 2005                  JRA       ??EXTI_GetExtIntSensitivity_7
    141                  break;
    142              case EXTI_PORT_GPIOE:
    143                  value = (uint8_t)(EXTI->CR2 & EXTI_CR2_PEIS);
   \                     ??EXTI_GetExtIntSensitivity_4:
   \   000052 C650A1                LD        A, L:0x50a1
   \                     ??EXTI_GetExtIntSensitivity_6:
   \   000055 A403                  AND       A, #0x3
   \                     ??EXTI_GetExtIntSensitivity_7:
   \   000057 B700                  LD        S:?b8, A
    144                  break;
    145              default:
    146                  break;
    147              }
    148          
    149              return((EXTI_Sensitivity_TypeDef)value);
   \                     ??EXTI_GetExtIntSensitivity_5:
   \   000059 B600                  LD        A, S:?b8
   \   00005B AC000000              JPF       L:?epilogue_w4
    150          }
    151          
    152          /**
    153            * @brief  Get the TLI interrupt sensitivity.
    154            * @param  None
    155            * @retval EXTI_TLISensitivity_TypeDef The TLI interrupt sensitivity read.
    156            */

   \                                 In section .far_func.text, align 1
    157          EXTI_TLISensitivity_TypeDef EXTI_GetTLISensitivity(void)
    158          {
    159          
    160              uint8_t value = 0;
    161          
    162              /* Get TLI interrupt sensitivity */
    163              value = (uint8_t)(EXTI->CR2 & EXTI_CR2_TLIS);
   \                     EXTI_GetTLISensitivity:
   \   000000 C650A1                LD        A, L:0x50a1
    164          
    165              return((EXTI_TLISensitivity_TypeDef)value);
   \   000003 A404                  AND       A, #0x4
   \   000005 87                    RETF
    166          }

   \                                 In section .near.rodata, align 1
   \                     `?<Constant "C:\\\\Users\\\\Administrato...">`:
   \   000000 433A5C557365          DC8 43H, 3AH, 5CH, 55H, 73H, 65H, 72H, 73H
   \   000008 5C41646D696E          DC8 5CH, 41H, 64H, 6DH, 69H, 6EH, 69H, 73H
   \   000010 747261746F72          DC8 74H, 72H, 61H, 74H, 6FH, 72H, 5CH, 44H
   \   000018 65736B746F70          DC8 65H, 73H, 6BH, 74H, 6FH, 70H, 5CH, 73H
   \   000020 746D38733130          DC8 74H, 6DH, 38H, 73H, 31H, 30H, 35H, 6BH
   \   000028 2D636F6E7472          DC8 2DH, 63H, 6FH, 6EH, 74H, 72H, 6FH, 6CH
   \   000030 6C65725C4C69          DC8 6CH, 65H, 72H, 5CH, 4CH, 69H, 62H, 72H
   \   000038 61726965735C          DC8 61H, 72H, 69H, 65H, 73H, 5CH, 53H, 54H
   \   000040 4D38535F5374          DC8 4DH, 38H, 53H, 5FH, 53H, 74H, 64H, 50H
   \   000048 65726970685F          DC8 65H, 72H, 69H, 70H, 68H, 5FH, 44H, 72H
   \   000050 697665725C73          DC8 69H, 76H, 65H, 72H, 5CH, 73H, 72H, 63H
   \   000058 5C73746D3873          DC8 5CH, 73H, 74H, 6DH, 38H, 73H, 5FH, 65H
   \   000060 7874692E6300          DC8 78H, 74H, 69H, 2EH, 63H, 0
    167          
    168          /**
    169            * @}
    170            */
    171            
    172          /**
    173            * @}
    174            */
    175            
    176          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label                           Bytes
     --------------                           -----
     EXTI_DeInit                                 9
     ?Subroutine0                               12
     EXTI_SetExtIntSensitivity                 164
     EXTI_SetTLISensitivity                     34
     EXTI_GetExtIntSensitivity                  95
     EXTI_GetTLISensitivity                      6
     ?<Constant "C:\\Users\\Administrato...">  102

 
 320 bytes in section .far_func.text
 102 bytes in section .near.rodata
 
 320 bytes of CODE  memory
 102 bytes of CONST memory

Errors: none
Warnings: none
