###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             07/Jul/2013  21:08:40 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\stm8s_it.c #
#    Command line =  "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\stm8s_it. #
#                    c" -e -Ohz --debug --code_model medium --data_model      #
#                    medium -o "C:\Documents and                              #
#                    Settings\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\Obj\"       #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0\stm8\LIB\dlstm8mmf.h" -D STM8S105 -lC      #
#                    "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\ST #
#                    M8S105\List\" -lA "C:\Documents and                      #
#                    Settings\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\List\" -I   #
#                    "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\.. #
#                    \" -I "C:\Documents and Settings\Administrator\Desktop\s #
#                    tm8s105k-controller\Project\STM8S_StdPeriph_Template\EWS #
#                    TM8\..\..\..\Libraries\STM8S_StdPeriph_Driver\inc\"      #
#                    --vregs 16                                               #
#    List file    =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\STM #
#                    8S105\List\stm8s_it.lst                                  #
#    Object file  =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\STM #
#                    8S105\Obj\stm8s_it.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\Desktop\stm8s105k-controller\Project\STM8S_StdPeriph_Template\stm8s_it.c
      1          /**
      2            ******************************************************************************
      3            * @file     stm8s_it.c
      4            * @author   MCD Application Team
      5            * @version  V2.1.0
      6            * @date     18-November-2011
      7            * @brief    Main Interrupt Service Routines.
      8            *           This file provides template for all peripherals interrupt service
      9            *           routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm8s_it.h"
     26          
     27          /** @addtogroup Template_Project
     28            * @{
     29            */
     30          
     31          /* Private typedef -----------------------------------------------------------*/
     32          /* Private define ------------------------------------------------------------*/
     33          #define data_size 10
     34          /* Private macro -------------------------------------------------------------*/
     35          /* Private variables ---------------------------------------------------------*/
     36          extern  volatile u16 timer1;
     37          extern  volatile u16 timer2;
     38          extern  volatile u16 adcdata;
     39          extern  volatile u8 timeout;
     40          extern  volatile u8 rx_data;

   \                                 In section .near.bss, align 1
     41          extern  volatile u8 index=0;
   \                     index:
   \   000000                       DS8 1
     42          extern   u16  measure[data_size];
     43          
     44          /* Private function prototypes -----------------------------------------------*/
     45          /* Private functions ---------------------------------------------------------*/
     46          /* Public functions ----------------------------------------------------------*/
     47          
     48          #ifdef _COSMIC_
     49          /**
     50            * @brief Dummy Interrupt routine
     51            * @par Parameters:
     52            * None
     53            * @retval
     54            * None
     55          */
     56          INTERRUPT_HANDLER(NonHandledInterrupt, 25)
     57          {
     58            /* In order to detect unexpected events during development,
     59               it is recommended to set a breakpoint on the following instruction.
     60            */
     61          }
     62          #endif /*_COSMIC_*/
     63          
     64          /**
     65            * @brief TRAP Interrupt routine
     66            * @param  None
     67            * @retval None
     68            */

   \                                 In section .far_func.text, align 1
     69          INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
     70          {
     71            /* In order to detect unexpected events during development,
     72               it is recommended to set a breakpoint on the following instruction.
     73            */
     74          }
   \                     TRAP_IRQHandler:
   \                     _interrupt_1:
   \   000000 80                    IRET
     75          
     76          /**
     77            * @brief Top Level Interrupt routine.
     78            * @param  None
     79            * @retval None
     80            */

   \                                 In section .far_func.text, align 1
     81          INTERRUPT_HANDLER(TLI_IRQHandler, 0)
     82          
     83          {
     84            /* In order to detect unexpected events during development,
     85               it is recommended to set a breakpoint on the following instruction.
     86            */
     87          }
   \                     TLI_IRQHandler:
   \                     _interrupt_2:
   \   000000 80                    IRET
     88          
     89          /**
     90            * @brief Auto Wake Up Interrupt routine.
     91            * @param  None
     92            * @retval None
     93            */

   \                                 In section .far_func.text, align 1
     94          INTERRUPT_HANDLER(AWU_IRQHandler, 1)
     95          {
     96            /* In order to detect unexpected events during development,
     97               it is recommended to set a breakpoint on the following instruction.
     98            */
     99          }
   \                     AWU_IRQHandler:
   \                     _interrupt_3:
   \   000000 80                    IRET
    100          
    101          /**
    102            * @brief Clock Controller Interrupt routine.
    103            * @param  None
    104            * @retval None
    105            */

   \                                 In section .far_func.text, align 1
    106          INTERRUPT_HANDLER(CLK_IRQHandler, 2)
    107          {
    108            /* In order to detect unexpected events during development,
    109               it is recommended to set a breakpoint on the following instruction.
    110            */
    111          }
   \                     CLK_IRQHandler:
   \                     _interrupt_4:
   \   000000 80                    IRET
    112          
    113          /**
    114            * @brief External Interrupt PORTA Interrupt routine.
    115            * @param  None
    116            * @retval None
    117            */

   \                                 In section .far_func.text, align 1
    118          INTERRUPT_HANDLER(EXTI_PORTA_IRQHandler, 3)
    119          {
    120            /* In order to detect unexpected events during development,
    121               it is recommended to set a breakpoint on the following instruction.
    122            */
    123          }
   \                     EXTI_PORTA_IRQHandler:
   \                     _interrupt_5:
   \   000000 80                    IRET
    124          
    125          /**
    126            * @brief External Interrupt PORTB Interrupt routine.
    127            * @param  None
    128            * @retval None
    129            */

   \                                 In section .far_func.text, align 1
    130          INTERRUPT_HANDLER(EXTI_PORTB_IRQHandler, 4)
    131          {
    132            /* In order to detect unexpected events during development,
    133               it is recommended to set a breakpoint on the following instruction.
    134            */
    135          }
   \                     EXTI_PORTB_IRQHandler:
   \                     _interrupt_6:
   \   000000 80                    IRET
    136          
    137          /**
    138            * @brief External Interrupt PORTC Interrupt routine.
    139            * @param  None
    140            * @retval None
    141            */

   \                                 In section .far_func.text, align 1
    142          INTERRUPT_HANDLER(EXTI_PORTC_IRQHandler, 5)
    143          {
    144            /* In order to detect unexpected events during development,
    145               it is recommended to set a breakpoint on the following instruction.
    146            */
    147          }
   \                     EXTI_PORTC_IRQHandler:
   \                     _interrupt_7:
   \   000000 80                    IRET
    148          
    149          /**
    150            * @brief External Interrupt PORTD Interrupt routine.
    151            * @param  None
    152            * @retval None
    153            */

   \                                 In section .far_func.text, align 1
    154          INTERRUPT_HANDLER(EXTI_PORTD_IRQHandler, 6)
    155          {
    156            /* In order to detect unexpected events during development,
    157               it is recommended to set a breakpoint on the following instruction.
    158            */
    159          }
   \                     EXTI_PORTD_IRQHandler:
   \                     _interrupt_8:
   \   000000 80                    IRET
    160          
    161          /**
    162            * @brief External Interrupt PORTE Interrupt routine.
    163            * @param  None
    164            * @retval None
    165            */

   \                                 In section .far_func.text, align 1
    166          INTERRUPT_HANDLER(EXTI_PORTE_IRQHandler, 7)
    167          {
    168            /* In order to detect unexpected events during development,
    169               it is recommended to set a breakpoint on the following instruction.
    170            */
    171          }
   \                     EXTI_PORTE_IRQHandler:
   \                     _interrupt_9:
   \   000000 80                    IRET
    172          
    173          #ifdef STM8S903
    174          /**
    175            * @brief External Interrupt PORTF Interrupt routine.
    176            * @param  None
    177            * @retval None
    178            */
    179           INTERRUPT_HANDLER(EXTI_PORTF_IRQHandler, 8)
    180           {
    181            /* In order to detect unexpected events during development,
    182               it is recommended to set a breakpoint on the following instruction.
    183            */
    184           }
    185          #endif /*STM8S903*/
    186          
    187          #if defined (STM8S208) || defined (STM8AF52Ax)
    188          /**
    189            * @brief CAN RX Interrupt routine.
    190            * @param  None
    191            * @retval None
    192            */
    193           INTERRUPT_HANDLER(CAN_RX_IRQHandler, 8)
    194           {
    195            /* In order to detect unexpected events during development,
    196               it is recommended to set a breakpoint on the following instruction.
    197            */
    198           }
    199          
    200          /**
    201            * @brief CAN TX Interrupt routine.
    202            * @param  None
    203            * @retval None
    204            */
    205           INTERRUPT_HANDLER(CAN_TX_IRQHandler, 9)
    206           {
    207            /* In order to detect unexpected events during development,
    208               it is recommended to set a breakpoint on the following instruction.
    209            */
    210           }
    211          #endif /*STM8S208 || STM8AF52Ax */
    212          
    213          /**
    214            * @brief SPI Interrupt routine.
    215            * @param  None
    216            * @retval None
    217            */

   \                                 In section .far_func.text, align 1
    218          INTERRUPT_HANDLER(SPI_IRQHandler, 10)
    219          {
    220            /* In order to detect unexpected events during development,
    221               it is recommended to set a breakpoint on the following instruction.
    222            */
    223          }
   \                     SPI_IRQHandler:
   \                     _interrupt_12:
   \   000000 80                    IRET
    224          
    225          /**
    226            * @brief Timer1 Update/Overflow/Trigger/Break Interrupt routine.
    227            * @param  None
    228            * @retval None
    229            */

   \                                 In section .far_func.text, align 1
    230          INTERRUPT_HANDLER(TIM1_UPD_OVF_TRG_BRK_IRQHandler, 11)
    231          {
    232            /* In order to detect unexpected events during development,
    233               it is recommended to set a breakpoint on the following instruction.
    234            */
    235          }
   \                     TIM1_UPD_OVF_TRG_BRK_IRQHandler:
   \                     _interrupt_13:
   \   000000 80                    IRET
    236          
    237          /**
    238            * @brief Timer1 Capture/Compare Interrupt routine.
    239            * @param  None
    240            * @retval None
    241            */

   \                                 In section .far_func.text, align 1
    242          INTERRUPT_HANDLER(TIM1_CAP_COM_IRQHandler, 12)
    243          {
    244            /* In order to detect unexpected events during development,
    245               it is recommended to set a breakpoint on the following instruction.
    246            */
    247          }
   \                     TIM1_CAP_COM_IRQHandler:
   \                     _interrupt_14:
   \   000000 80                    IRET
    248          
    249          #ifdef STM8S903
    250          /**
    251            * @brief Timer5 Update/Overflow/Break/Trigger Interrupt routine.
    252            * @param  None
    253            * @retval None
    254            */
    255           INTERRUPT_HANDLER(TIM5_UPD_OVF_BRK_TRG_IRQHandler, 13)
    256           {
    257            /* In order to detect unexpected events during development,
    258               it is recommended to set a breakpoint on the following instruction.
    259            */
    260           }
    261          
    262          /**
    263            * @brief Timer5 Capture/Compare Interrupt routine.
    264            * @param  None
    265            * @retval None
    266            */
    267           INTERRUPT_HANDLER(TIM5_CAP_COM_IRQHandler, 14)
    268           {
    269            /* In order to detect unexpected events during development,
    270               it is recommended to set a breakpoint on the following instruction.
    271            */
    272           }
    273          
    274          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    275          /**
    276            * @brief Timer2 Update/Overflow/Break Interrupt routine.
    277            * @param  None
    278            * @retval None
    279            */

   \                                 In section .far_func.text, align 1
    280           INTERRUPT_HANDLER(TIM2_UPD_OVF_BRK_IRQHandler, 13)
    281           {
   \                     TIM2_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_15:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    282            /* In order to detect unexpected events during development,
    283               it is recommended to set a breakpoint on the following instruction.
    284            */
    285           timer2++;
   \   00000E CE0000                LDW       X, L:timer2
   \   000011 5C                    INCW      X
   \   000012 CF0000                LDW       L:timer2, X
    286           timer1++;
   \   000015 CE0000                LDW       X, L:timer1
   \   000018 5C                    INCW      X
   \   000019 CF0000                LDW       L:timer1, X
    287           timeout--;
   \   00001C C60000                LD        A, L:timeout
   \   00001F 4A                    DEC       A
   \   000020 C70000                LD        L:timeout, A
    288            if (timeout<=0) timeout=0;
   \   000023 C60000                LD        A, L:timeout
   \   000026 2604                  JRNE      L:??TIM2_UPD_OVF_BRK_IRQHandler_0
   \   000028 725F0000              CLR       L:timeout
    289          
    290          
    291          
    292           //ADC1_Cmd (ENABLE); //Start convert
    293           TIM2_ClearITPendingBit(TIM2_IT_UPDATE);
   \                     ??TIM2_UPD_OVF_BRK_IRQHandler_0:
   \   00002C A601                  LD        A, #0x1
   \   00002E 8D000000              CALLF     TIM2_ClearITPendingBit
    294          
    295           }
   \   000032 8D000000              CALLF     L:?pop_l1
   \   000036 8D000000              CALLF     L:?pop_l0
   \   00003A 80                    IRET
    296          
    297          /**
    298            * @brief Timer2 Capture/Compare Interrupt routine.
    299            * @param  None
    300            * @retval None
    301            */

   \                                 In section .far_func.text, align 1
    302           INTERRUPT_HANDLER(TIM2_CAP_COM_IRQHandler, 14)
    303           {
    304            /* In order to detect unexpected events during development,
    305               it is recommended to set a breakpoint on the following instruction.
    306            */
    307           }
   \                     TIM2_CAP_COM_IRQHandler:
   \                     _interrupt_16:
   \   000000 80                    IRET
    308          #endif /*STM8S903*/
    309          
    310          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S105) || \
    311              defined(STM8S005) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8AF626x)
    312          /**
    313            * @brief Timer3 Update/Overflow/Break Interrupt routine.
    314            * @param  None
    315            * @retval None
    316            */

   \                                 In section .far_func.text, align 1
    317           INTERRUPT_HANDLER(TIM3_UPD_OVF_BRK_IRQHandler, 15)
    318           {
    319            /* In order to detect unexpected events during development,
    320               it is recommended to set a breakpoint on the following instruction.
    321            */
    322           }
   \                     TIM3_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_17:
   \   000000 80                    IRET
    323          
    324          /**
    325            * @brief Timer3 Capture/Compare Interrupt routine.
    326            * @param  None
    327            * @retval None
    328            */

   \                                 In section .far_func.text, align 1
    329           INTERRUPT_HANDLER(TIM3_CAP_COM_IRQHandler, 16)
    330           {
    331            /* In order to detect unexpected events during development,
    332               it is recommended to set a breakpoint on the following instruction.
    333            */
    334           }
   \                     TIM3_CAP_COM_IRQHandler:
   \                     _interrupt_18:
   \   000000 80                    IRET
    335          #endif /*STM8S208, STM8S207 or STM8S105 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    336          
    337          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S103) || \
    338              defined(STM8S003) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8S903)
    339          /**
    340            * @brief UART1 TX Interrupt routine.
    341            * @param  None
    342            * @retval None
    343            */
    344           INTERRUPT_HANDLER(UART1_TX_IRQHandler, 17)
    345           {
    346              /* In order to detect unexpected events during development,
    347                 it is recommended to set a breakpoint on the following instruction.
    348              */
    349           }
    350          
    351          /**
    352            * @brief UART1 RX Interrupt routine.
    353            * @param  None
    354            * @retval None
    355            */
    356           INTERRUPT_HANDLER(UART1_RX_IRQHandler, 18)
    357           {
    358              /* In order to detect unexpected events during development,
    359                 it is recommended to set a breakpoint on the following instruction.
    360              */
    361           }
    362          #endif /*STM8S208 or STM8S207 or STM8S103 or STM8S903 or STM8AF62Ax or STM8AF52Ax */
    363          
    364          /**
    365            * @brief I2C Interrupt routine.
    366            * @param  None
    367            * @retval None
    368            */

   \                                 In section .far_func.text, align 1
    369          INTERRUPT_HANDLER(I2C_IRQHandler, 19)
    370          {
    371            /* In order to detect unexpected events during development,
    372               it is recommended to set a breakpoint on the following instruction.
    373            */
    374          }
   \                     I2C_IRQHandler:
   \                     _interrupt_21:
   \   000000 80                    IRET
    375          
    376          #if defined(STM8S105) || defined(STM8S005) ||  defined (STM8AF626x)
    377          /**
    378            * @brief    TX interrupt routine.
    379            * @param  None
    380            * @retval None
    381            */

   \                                 In section .far_func.text, align 1
    382           INTERRUPT_HANDLER(UART2_TX_IRQHandler, 20)
    383           {
    384              /* In order to detect unexpected events during development,
    385                 it is recommended to set a breakpoint on the following instruction.
    386              */
    387           }
   \                     UART2_TX_IRQHandler:
   \                     _interrupt_22:
   \   000000 80                    IRET
    388          
    389          /**
    390            * @brief UART2 RX interrupt routine.
    391            * @param  None
    392            * @retval None
    393            */

   \                                 In section .far_func.text, align 1
    394           INTERRUPT_HANDLER(UART2_RX_IRQHandler, 21)
    395           {
   \                     UART2_RX_IRQHandler:
   \                     _interrupt_23:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    396              /* In order to detect unexpected events during development,
    397                 it is recommended to set a breakpoint on the following instruction.
    398              */
    399             rx_data=UART2_ReceiveData8();
   \   00000E 8D000000              CALLF     UART2_ReceiveData8
   \   000012 C70000                LD        L:rx_data, A
    400             UART2_ClearITPendingBit(UART2_IT_RXNE);
   \   000015 AE0255                LDW       X, #0x255
   \   000018 8D000000              CALLF     UART2_ClearITPendingBit
    401          
    402           }
   \   00001C 8D000000              CALLF     L:?pop_l1
   \   000020 8D000000              CALLF     L:?pop_l0
   \   000024 80                    IRET
    403          #endif /* STM8S105 or STM8AF626x */
    404          
    405          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    406          /**
    407            * @brief UART3 TX interrupt routine.
    408            * @param  None
    409            * @retval None
    410            */
    411           INTERRUPT_HANDLER(UART3_TX_IRQHandler, 20)
    412           {
    413              /* In order to detect unexpected events during development,
    414                 it is recommended to set a breakpoint on the following instruction.
    415              */
    416           }
    417          
    418          /**
    419            * @brief UART3 RX interrupt routine.
    420            * @param  None
    421            * @retval None
    422            */
    423           INTERRUPT_HANDLER(UART3_RX_IRQHandler, 21)
    424           {
    425              /* In order to detect unexpected events during development,
    426                 it is recommended to set a breakpoint on the following instruction.
    427              */
    428           }
    429          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    430          
    431          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    432          /**
    433            * @brief ADC2 interrupt routine.
    434            * @param  None
    435            * @retval None
    436            */
    437           INTERRUPT_HANDLER(ADC2_IRQHandler, 22)
    438           {
    439              /* In order to detect unexpected events during development,
    440                 it is recommended to set a breakpoint on the following instruction.
    441              */
    442           }
    443          #else /*STM8S105, STM8S103 or STM8S903 or STM8AF626x */
    444          /**
    445            * @brief ADC1 interrupt routine.
    446            * @par Parameters:
    447            * None
    448            * @retval
    449            * None
    450            */

   \                                 In section .far_func.text, align 1
    451           INTERRUPT_HANDLER(ADC1_IRQHandler, 22)
    452           {
   \                     ADC1_IRQHandler:
   \                     _interrupt_24:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    453              /* In order to detect unexpected events during development,
    454                 it is recommended to set a breakpoint on the following instruction.
    455              */
    456             //ADC1_Cmd (DISABLE);
    457             ADC1_ClearFlag(ADC1_FLAG_EOC);
   \   00000E A680                  LD        A, #0x80
   \   000010 8D000000              CALLF     ADC1_ClearFlag
    458             adcdata = ADC1_GetConversionValue();
   \   000014 8D000000              CALLF     ADC1_GetConversionValue
   \   000018 CF0000                LDW       L:adcdata, X
    459             measure[index++]=adcdata;
                    ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   00001B C60000                LD        A, L:index
   \   00001E B700                  LD        S:?b0, A
   \   000020 4C                    INC       A
   \   000021 C70000                LD        L:index, A
   \   000024 5F                    CLRW      X
   \   000025 41                    EXG       A, XL
   \   000026 B600                  LD        A, S:?b0
   \   000028 41                    EXG       A, XL
   \   000029 58                    SLLW      X
   \   00002A 90CE0000              LDW       Y, L:adcdata
   \   00002E DF0000                LDW       (L:measure,X), Y
    460                if (index==data_size)
   \   000031 C60000                LD        A, L:index
   \   000034 A10A                  CP        A, #0xa
   \   000036 260F                  JRNE      L:??ADC1_IRQHandler_0
    461                {
    462                  measure[index]=0;
   \   000038 C60000                LD        A, L:index
   \   00003B 5F                    CLRW      X
   \   00003C 97                    LD        XL, A
   \   00003D 58                    SLLW      X
   \   00003E 905F                  CLRW      Y
   \   000040 DF0000                LDW       (L:measure,X), Y
    463                  index=0;
   \   000043 725F0000              CLR       L:index
    464                }
    465             ADC1_ClearITPendingBit(ADC1_IT_EOC);
   \                     ??ADC1_IRQHandler_0:
   \   000047 AE0080                LDW       X, #0x80
   \   00004A 8D000000              CALLF     ADC1_ClearITPendingBit
    466              //ADC1_Cmd (ENABLE);
    467              //ADC1_Cmd (ENABLE);  //Second Start conversion
    468           }
   \   00004E 8D000000              CALLF     L:?pop_l1
   \   000052 8D000000              CALLF     L:?pop_l0
   \   000056 80                    IRET
    469          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    470          
    471          #ifdef STM8S903
    472          /**
    473            * @brief Timer6 Update/Overflow/Trigger Interrupt routine.
    474            * @param  None
    475            * @retval None
    476            */
    477          INTERRUPT_HANDLER(TIM6_UPD_OVF_TRG_IRQHandler, 23)
    478           {
    479            /* In order to detect unexpected events during development,
    480               it is recommended to set a breakpoint on the following instruction.
    481            */
    482           }
    483          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF52Ax or STM8AF62Ax or STM8AF626x */
    484          /**
    485            * @brief Timer4 Update/Overflow Interrupt routine.
    486            * @param  None
    487            * @retval None
    488            */

   \                                 In section .far_func.text, align 1
    489           INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 23)
    490           {
    491            /* In order to detect unexpected events during development,
    492               it is recommended to set a breakpoint on the following instruction.
    493            */
    494           }
   \                     TIM4_UPD_OVF_IRQHandler:
   \                     _interrupt_25:
   \   000000 80                    IRET
    495          #endif /*STM8S903*/
    496          
    497          /**
    498            * @brief Eeprom EEC Interrupt routine.
    499            * @param  None
    500            * @retval None
    501            */

   \                                 In section .far_func.text, align 1
    502          INTERRUPT_HANDLER(EEPROM_EEC_IRQHandler, 24)
    503          {
    504            /* In order to detect unexpected events during development,
    505               it is recommended to set a breakpoint on the following instruction.
    506            */
    507          }
   \                     EEPROM_EEC_IRQHandler:
   \                     _interrupt_26:
   \   000000 80                    IRET
    508          
    509          /**
    510            * @}
    511            */
    512          
    513          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     index                             1
     TRAP_IRQHandler                   1
     TLI_IRQHandler                    1
     AWU_IRQHandler                    1
     CLK_IRQHandler                    1
     EXTI_PORTA_IRQHandler             1
     EXTI_PORTB_IRQHandler             1
     EXTI_PORTC_IRQHandler             1
     EXTI_PORTD_IRQHandler             1
     EXTI_PORTE_IRQHandler             1
     SPI_IRQHandler                    1
     TIM1_UPD_OVF_TRG_BRK_IRQHandler
                                       1
     TIM1_CAP_COM_IRQHandler           1
     TIM2_UPD_OVF_BRK_IRQHandler      59
     TIM2_CAP_COM_IRQHandler           1
     TIM3_UPD_OVF_BRK_IRQHandler       1
     TIM3_CAP_COM_IRQHandler           1
     I2C_IRQHandler                    1
     UART2_TX_IRQHandler               1
     UART2_RX_IRQHandler              37
     ADC1_IRQHandler                  87
     TIM4_UPD_OVF_IRQHandler           1
     EEPROM_EEC_IRQHandler             1

 
 202 bytes in section .far_func.text
   1 byte  in section .near.bss
 
 202 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: 1
