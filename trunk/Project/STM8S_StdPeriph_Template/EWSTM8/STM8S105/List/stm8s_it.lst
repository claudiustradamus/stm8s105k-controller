###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             05/Jul/2013  20:02:13 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\stm8s_it.c #
#    Command line =  "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\stm8s_it. #
#                    c" -e -Ohz --debug --code_model medium --data_model      #
#                    medium -o "C:\Documents and                              #
#                    Settings\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\Obj\"       #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0\stm8\LIB\dlstm8mmf.h" -D STM8S105 -lC      #
#                    "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\ST #
#                    M8S105\List\" -lA "C:\Documents and                      #
#                    Settings\Administrator\Desktop\stm8s105k-controller\Proj #
#                    ect\STM8S_StdPeriph_Template\EWSTM8\STM8S105\List\" -I   #
#                    "C:\Documents and Settings\Administrator\Desktop\stm8s10 #
#                    5k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\.. #
#                    \" -I "C:\Documents and Settings\Administrator\Desktop\s #
#                    tm8s105k-controller\Project\STM8S_StdPeriph_Template\EWS #
#                    TM8\..\..\..\Libraries\STM8S_StdPeriph_Driver\inc\"      #
#                    --vregs 16                                               #
#    List file    =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\STM #
#                    8S105\List\stm8s_it.lst                                  #
#    Object file  =  C:\Documents and Settings\Administrator\Desktop\stm8s105 #
#                    k-controller\Project\STM8S_StdPeriph_Template\EWSTM8\STM #
#                    8S105\Obj\stm8s_it.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\Desktop\stm8s105k-controller\Project\STM8S_StdPeriph_Template\stm8s_it.c
      1          /**
      2            ******************************************************************************
      3            * @file     stm8s_it.c
      4            * @author   MCD Application Team
      5            * @version  V2.1.0
      6            * @date     18-November-2011
      7            * @brief    Main Interrupt Service Routines.
      8            *           This file provides template for all peripherals interrupt service
      9            *           routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm8s_it.h"
     26          
     27          /** @addtogroup Template_Project
     28            * @{
     29            */
     30          
     31          /* Private typedef -----------------------------------------------------------*/
     32          /* Private define ------------------------------------------------------------*/
     33          #define data_size 10
     34          /* Private macro -------------------------------------------------------------*/
     35          /* Private variables ---------------------------------------------------------*/
     36          extern  volatile u16 timer1;
     37          extern  volatile u16 timer2;
     38          extern  volatile u16 adcdata;
     39          extern  volatile u8 rx_data;

   \                                 In section .near.bss, align 1
     40          extern  volatile u8 index=0;
   \                     index:
   \   000000                       DS8 1
     41          extern   u16  measure[data_size];
     42          
     43          /* Private function prototypes -----------------------------------------------*/
     44          /* Private functions ---------------------------------------------------------*/
     45          /* Public functions ----------------------------------------------------------*/
     46          
     47          #ifdef _COSMIC_
     48          /**
     49            * @brief Dummy Interrupt routine
     50            * @par Parameters:
     51            * None
     52            * @retval
     53            * None
     54          */
     55          INTERRUPT_HANDLER(NonHandledInterrupt, 25)
     56          {
     57            /* In order to detect unexpected events during development,
     58               it is recommended to set a breakpoint on the following instruction.
     59            */
     60          }
     61          #endif /*_COSMIC_*/
     62          
     63          /**
     64            * @brief TRAP Interrupt routine
     65            * @param  None
     66            * @retval None
     67            */

   \                                 In section .far_func.text, align 1
     68          INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
     69          {
     70            /* In order to detect unexpected events during development,
     71               it is recommended to set a breakpoint on the following instruction.
     72            */
     73          }
   \                     TRAP_IRQHandler:
   \                     _interrupt_1:
   \   000000 80                    IRET
     74          
     75          /**
     76            * @brief Top Level Interrupt routine.
     77            * @param  None
     78            * @retval None
     79            */

   \                                 In section .far_func.text, align 1
     80          INTERRUPT_HANDLER(TLI_IRQHandler, 0)
     81          
     82          {
     83            /* In order to detect unexpected events during development,
     84               it is recommended to set a breakpoint on the following instruction.
     85            */
     86          }
   \                     TLI_IRQHandler:
   \                     _interrupt_2:
   \   000000 80                    IRET
     87          
     88          /**
     89            * @brief Auto Wake Up Interrupt routine.
     90            * @param  None
     91            * @retval None
     92            */

   \                                 In section .far_func.text, align 1
     93          INTERRUPT_HANDLER(AWU_IRQHandler, 1)
     94          {
     95            /* In order to detect unexpected events during development,
     96               it is recommended to set a breakpoint on the following instruction.
     97            */
     98          }
   \                     AWU_IRQHandler:
   \                     _interrupt_3:
   \   000000 80                    IRET
     99          
    100          /**
    101            * @brief Clock Controller Interrupt routine.
    102            * @param  None
    103            * @retval None
    104            */

   \                                 In section .far_func.text, align 1
    105          INTERRUPT_HANDLER(CLK_IRQHandler, 2)
    106          {
    107            /* In order to detect unexpected events during development,
    108               it is recommended to set a breakpoint on the following instruction.
    109            */
    110          }
   \                     CLK_IRQHandler:
   \                     _interrupt_4:
   \   000000 80                    IRET
    111          
    112          /**
    113            * @brief External Interrupt PORTA Interrupt routine.
    114            * @param  None
    115            * @retval None
    116            */

   \                                 In section .far_func.text, align 1
    117          INTERRUPT_HANDLER(EXTI_PORTA_IRQHandler, 3)
    118          {
    119            /* In order to detect unexpected events during development,
    120               it is recommended to set a breakpoint on the following instruction.
    121            */
    122          }
   \                     EXTI_PORTA_IRQHandler:
   \                     _interrupt_5:
   \   000000 80                    IRET
    123          
    124          /**
    125            * @brief External Interrupt PORTB Interrupt routine.
    126            * @param  None
    127            * @retval None
    128            */

   \                                 In section .far_func.text, align 1
    129          INTERRUPT_HANDLER(EXTI_PORTB_IRQHandler, 4)
    130          {
    131            /* In order to detect unexpected events during development,
    132               it is recommended to set a breakpoint on the following instruction.
    133            */
    134          }
   \                     EXTI_PORTB_IRQHandler:
   \                     _interrupt_6:
   \   000000 80                    IRET
    135          
    136          /**
    137            * @brief External Interrupt PORTC Interrupt routine.
    138            * @param  None
    139            * @retval None
    140            */

   \                                 In section .far_func.text, align 1
    141          INTERRUPT_HANDLER(EXTI_PORTC_IRQHandler, 5)
    142          {
    143            /* In order to detect unexpected events during development,
    144               it is recommended to set a breakpoint on the following instruction.
    145            */
    146          }
   \                     EXTI_PORTC_IRQHandler:
   \                     _interrupt_7:
   \   000000 80                    IRET
    147          
    148          /**
    149            * @brief External Interrupt PORTD Interrupt routine.
    150            * @param  None
    151            * @retval None
    152            */

   \                                 In section .far_func.text, align 1
    153          INTERRUPT_HANDLER(EXTI_PORTD_IRQHandler, 6)
    154          {
    155            /* In order to detect unexpected events during development,
    156               it is recommended to set a breakpoint on the following instruction.
    157            */
    158          }
   \                     EXTI_PORTD_IRQHandler:
   \                     _interrupt_8:
   \   000000 80                    IRET
    159          
    160          /**
    161            * @brief External Interrupt PORTE Interrupt routine.
    162            * @param  None
    163            * @retval None
    164            */

   \                                 In section .far_func.text, align 1
    165          INTERRUPT_HANDLER(EXTI_PORTE_IRQHandler, 7)
    166          {
    167            /* In order to detect unexpected events during development,
    168               it is recommended to set a breakpoint on the following instruction.
    169            */
    170          }
   \                     EXTI_PORTE_IRQHandler:
   \                     _interrupt_9:
   \   000000 80                    IRET
    171          
    172          #ifdef STM8S903
    173          /**
    174            * @brief External Interrupt PORTF Interrupt routine.
    175            * @param  None
    176            * @retval None
    177            */
    178           INTERRUPT_HANDLER(EXTI_PORTF_IRQHandler, 8)
    179           {
    180            /* In order to detect unexpected events during development,
    181               it is recommended to set a breakpoint on the following instruction.
    182            */
    183           }
    184          #endif /*STM8S903*/
    185          
    186          #if defined (STM8S208) || defined (STM8AF52Ax)
    187          /**
    188            * @brief CAN RX Interrupt routine.
    189            * @param  None
    190            * @retval None
    191            */
    192           INTERRUPT_HANDLER(CAN_RX_IRQHandler, 8)
    193           {
    194            /* In order to detect unexpected events during development,
    195               it is recommended to set a breakpoint on the following instruction.
    196            */
    197           }
    198          
    199          /**
    200            * @brief CAN TX Interrupt routine.
    201            * @param  None
    202            * @retval None
    203            */
    204           INTERRUPT_HANDLER(CAN_TX_IRQHandler, 9)
    205           {
    206            /* In order to detect unexpected events during development,
    207               it is recommended to set a breakpoint on the following instruction.
    208            */
    209           }
    210          #endif /*STM8S208 || STM8AF52Ax */
    211          
    212          /**
    213            * @brief SPI Interrupt routine.
    214            * @param  None
    215            * @retval None
    216            */

   \                                 In section .far_func.text, align 1
    217          INTERRUPT_HANDLER(SPI_IRQHandler, 10)
    218          {
    219            /* In order to detect unexpected events during development,
    220               it is recommended to set a breakpoint on the following instruction.
    221            */
    222          }
   \                     SPI_IRQHandler:
   \                     _interrupt_12:
   \   000000 80                    IRET
    223          
    224          /**
    225            * @brief Timer1 Update/Overflow/Trigger/Break Interrupt routine.
    226            * @param  None
    227            * @retval None
    228            */

   \                                 In section .far_func.text, align 1
    229          INTERRUPT_HANDLER(TIM1_UPD_OVF_TRG_BRK_IRQHandler, 11)
    230          {
    231            /* In order to detect unexpected events during development,
    232               it is recommended to set a breakpoint on the following instruction.
    233            */
    234          }
   \                     TIM1_UPD_OVF_TRG_BRK_IRQHandler:
   \                     _interrupt_13:
   \   000000 80                    IRET
    235          
    236          /**
    237            * @brief Timer1 Capture/Compare Interrupt routine.
    238            * @param  None
    239            * @retval None
    240            */

   \                                 In section .far_func.text, align 1
    241          INTERRUPT_HANDLER(TIM1_CAP_COM_IRQHandler, 12)
    242          {
    243            /* In order to detect unexpected events during development,
    244               it is recommended to set a breakpoint on the following instruction.
    245            */
    246          }
   \                     TIM1_CAP_COM_IRQHandler:
   \                     _interrupt_14:
   \   000000 80                    IRET
    247          
    248          #ifdef STM8S903
    249          /**
    250            * @brief Timer5 Update/Overflow/Break/Trigger Interrupt routine.
    251            * @param  None
    252            * @retval None
    253            */
    254           INTERRUPT_HANDLER(TIM5_UPD_OVF_BRK_TRG_IRQHandler, 13)
    255           {
    256            /* In order to detect unexpected events during development,
    257               it is recommended to set a breakpoint on the following instruction.
    258            */
    259           }
    260          
    261          /**
    262            * @brief Timer5 Capture/Compare Interrupt routine.
    263            * @param  None
    264            * @retval None
    265            */
    266           INTERRUPT_HANDLER(TIM5_CAP_COM_IRQHandler, 14)
    267           {
    268            /* In order to detect unexpected events during development,
    269               it is recommended to set a breakpoint on the following instruction.
    270            */
    271           }
    272          
    273          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    274          /**
    275            * @brief Timer2 Update/Overflow/Break Interrupt routine.
    276            * @param  None
    277            * @retval None
    278            */

   \                                 In section .far_func.text, align 1
    279           INTERRUPT_HANDLER(TIM2_UPD_OVF_BRK_IRQHandler, 13)
    280           {
   \                     TIM2_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_15:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    281            /* In order to detect unexpected events during development,
    282               it is recommended to set a breakpoint on the following instruction.
    283            */
    284           timer2++;
   \   00000E CE0000                LDW       X, L:timer2
   \   000011 5C                    INCW      X
   \   000012 CF0000                LDW       L:timer2, X
    285           timer1++;
   \   000015 CE0000                LDW       X, L:timer1
   \   000018 5C                    INCW      X
   \   000019 CF0000                LDW       L:timer1, X
    286          
    287           //ADC1_Cmd (ENABLE); //Start convert
    288           TIM2_ClearITPendingBit(TIM2_IT_UPDATE);
   \   00001C A601                  LD        A, #0x1
   \   00001E 8D000000              CALLF     TIM2_ClearITPendingBit
    289          
    290           }
   \   000022 8D000000              CALLF     L:?pop_l1
   \   000026 8D000000              CALLF     L:?pop_l0
   \   00002A 80                    IRET
    291          
    292          /**
    293            * @brief Timer2 Capture/Compare Interrupt routine.
    294            * @param  None
    295            * @retval None
    296            */

   \                                 In section .far_func.text, align 1
    297           INTERRUPT_HANDLER(TIM2_CAP_COM_IRQHandler, 14)
    298           {
    299            /* In order to detect unexpected events during development,
    300               it is recommended to set a breakpoint on the following instruction.
    301            */
    302           }
   \                     TIM2_CAP_COM_IRQHandler:
   \                     _interrupt_16:
   \   000000 80                    IRET
    303          #endif /*STM8S903*/
    304          
    305          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S105) || \
    306              defined(STM8S005) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8AF626x)
    307          /**
    308            * @brief Timer3 Update/Overflow/Break Interrupt routine.
    309            * @param  None
    310            * @retval None
    311            */

   \                                 In section .far_func.text, align 1
    312           INTERRUPT_HANDLER(TIM3_UPD_OVF_BRK_IRQHandler, 15)
    313           {
    314            /* In order to detect unexpected events during development,
    315               it is recommended to set a breakpoint on the following instruction.
    316            */
    317           }
   \                     TIM3_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_17:
   \   000000 80                    IRET
    318          
    319          /**
    320            * @brief Timer3 Capture/Compare Interrupt routine.
    321            * @param  None
    322            * @retval None
    323            */

   \                                 In section .far_func.text, align 1
    324           INTERRUPT_HANDLER(TIM3_CAP_COM_IRQHandler, 16)
    325           {
    326            /* In order to detect unexpected events during development,
    327               it is recommended to set a breakpoint on the following instruction.
    328            */
    329           }
   \                     TIM3_CAP_COM_IRQHandler:
   \                     _interrupt_18:
   \   000000 80                    IRET
    330          #endif /*STM8S208, STM8S207 or STM8S105 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    331          
    332          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S103) || \
    333              defined(STM8S003) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8S903)
    334          /**
    335            * @brief UART1 TX Interrupt routine.
    336            * @param  None
    337            * @retval None
    338            */
    339           INTERRUPT_HANDLER(UART1_TX_IRQHandler, 17)
    340           {
    341              /* In order to detect unexpected events during development,
    342                 it is recommended to set a breakpoint on the following instruction.
    343              */
    344           }
    345          
    346          /**
    347            * @brief UART1 RX Interrupt routine.
    348            * @param  None
    349            * @retval None
    350            */
    351           INTERRUPT_HANDLER(UART1_RX_IRQHandler, 18)
    352           {
    353              /* In order to detect unexpected events during development,
    354                 it is recommended to set a breakpoint on the following instruction.
    355              */
    356           }
    357          #endif /*STM8S208 or STM8S207 or STM8S103 or STM8S903 or STM8AF62Ax or STM8AF52Ax */
    358          
    359          /**
    360            * @brief I2C Interrupt routine.
    361            * @param  None
    362            * @retval None
    363            */

   \                                 In section .far_func.text, align 1
    364          INTERRUPT_HANDLER(I2C_IRQHandler, 19)
    365          {
    366            /* In order to detect unexpected events during development,
    367               it is recommended to set a breakpoint on the following instruction.
    368            */
    369          }
   \                     I2C_IRQHandler:
   \                     _interrupt_21:
   \   000000 80                    IRET
    370          
    371          #if defined(STM8S105) || defined(STM8S005) ||  defined (STM8AF626x)
    372          /**
    373            * @brief    TX interrupt routine.
    374            * @param  None
    375            * @retval None
    376            */

   \                                 In section .far_func.text, align 1
    377           INTERRUPT_HANDLER(UART2_TX_IRQHandler, 20)
    378           {
    379              /* In order to detect unexpected events during development,
    380                 it is recommended to set a breakpoint on the following instruction.
    381              */
    382           }
   \                     UART2_TX_IRQHandler:
   \                     _interrupt_22:
   \   000000 80                    IRET
    383          
    384          /**
    385            * @brief UART2 RX interrupt routine.
    386            * @param  None
    387            * @retval None
    388            */

   \                                 In section .far_func.text, align 1
    389           INTERRUPT_HANDLER(UART2_RX_IRQHandler, 21)
    390           {
   \                     UART2_RX_IRQHandler:
   \                     _interrupt_23:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    391              /* In order to detect unexpected events during development,
    392                 it is recommended to set a breakpoint on the following instruction.
    393              */
    394             rx_data=UART2_ReceiveData8();
   \   00000E 8D000000              CALLF     UART2_ReceiveData8
   \   000012 C70000                LD        L:rx_data, A
    395             UART2_ClearITPendingBit(UART2_IT_RXNE);
   \   000015 AE0255                LDW       X, #0x255
   \   000018 8D000000              CALLF     UART2_ClearITPendingBit
    396          
    397           }
   \   00001C 8D000000              CALLF     L:?pop_l1
   \   000020 8D000000              CALLF     L:?pop_l0
   \   000024 80                    IRET
    398          #endif /* STM8S105 or STM8AF626x */
    399          
    400          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    401          /**
    402            * @brief UART3 TX interrupt routine.
    403            * @param  None
    404            * @retval None
    405            */
    406           INTERRUPT_HANDLER(UART3_TX_IRQHandler, 20)
    407           {
    408              /* In order to detect unexpected events during development,
    409                 it is recommended to set a breakpoint on the following instruction.
    410              */
    411           }
    412          
    413          /**
    414            * @brief UART3 RX interrupt routine.
    415            * @param  None
    416            * @retval None
    417            */
    418           INTERRUPT_HANDLER(UART3_RX_IRQHandler, 21)
    419           {
    420              /* In order to detect unexpected events during development,
    421                 it is recommended to set a breakpoint on the following instruction.
    422              */
    423           }
    424          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    425          
    426          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    427          /**
    428            * @brief ADC2 interrupt routine.
    429            * @param  None
    430            * @retval None
    431            */
    432           INTERRUPT_HANDLER(ADC2_IRQHandler, 22)
    433           {
    434              /* In order to detect unexpected events during development,
    435                 it is recommended to set a breakpoint on the following instruction.
    436              */
    437           }
    438          #else /*STM8S105, STM8S103 or STM8S903 or STM8AF626x */
    439          /**
    440            * @brief ADC1 interrupt routine.
    441            * @par Parameters:
    442            * None
    443            * @retval
    444            * None
    445            */

   \                                 In section .far_func.text, align 1
    446           INTERRUPT_HANDLER(ADC1_IRQHandler, 22)
    447           {
   \                     ADC1_IRQHandler:
   \                     _interrupt_24:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 8D000000              CALLF     L:?push_l0
   \   00000A 8D000000              CALLF     L:?push_l1
    448              /* In order to detect unexpected events during development,
    449                 it is recommended to set a breakpoint on the following instruction.
    450              */
    451             //ADC1_Cmd (DISABLE);
    452             ADC1_ClearFlag(ADC1_FLAG_EOC);
   \   00000E A680                  LD        A, #0x80
   \   000010 8D000000              CALLF     ADC1_ClearFlag
    453             adcdata = ADC1_GetConversionValue();
   \   000014 8D000000              CALLF     ADC1_GetConversionValue
   \   000018 CF0000                LDW       L:adcdata, X
    454             measure[index++]=adcdata;
                    ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   00001B C60000                LD        A, L:index
   \   00001E B700                  LD        S:?b0, A
   \   000020 4C                    INC       A
   \   000021 C70000                LD        L:index, A
   \   000024 5F                    CLRW      X
   \   000025 41                    EXG       A, XL
   \   000026 B600                  LD        A, S:?b0
   \   000028 41                    EXG       A, XL
   \   000029 58                    SLLW      X
   \   00002A 90CE0000              LDW       Y, L:adcdata
   \   00002E DF0000                LDW       (L:measure,X), Y
    455                if (index==data_size)
   \   000031 C60000                LD        A, L:index
   \   000034 A10A                  CP        A, #0xa
   \   000036 260F                  JRNE      L:??ADC1_IRQHandler_0
    456                {
    457                  measure[index]=0;
   \   000038 C60000                LD        A, L:index
   \   00003B 5F                    CLRW      X
   \   00003C 97                    LD        XL, A
   \   00003D 58                    SLLW      X
   \   00003E 905F                  CLRW      Y
   \   000040 DF0000                LDW       (L:measure,X), Y
    458                  index=0;
   \   000043 725F0000              CLR       L:index
    459                }
    460             ADC1_ClearITPendingBit(ADC1_IT_EOC);
   \                     ??ADC1_IRQHandler_0:
   \   000047 AE0080                LDW       X, #0x80
   \   00004A 8D000000              CALLF     ADC1_ClearITPendingBit
    461              //ADC1_Cmd (ENABLE);
    462              //ADC1_Cmd (ENABLE);  //Second Start conversion
    463           }
   \   00004E 8D000000              CALLF     L:?pop_l1
   \   000052 8D000000              CALLF     L:?pop_l0
   \   000056 80                    IRET
    464          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    465          
    466          #ifdef STM8S903
    467          /**
    468            * @brief Timer6 Update/Overflow/Trigger Interrupt routine.
    469            * @param  None
    470            * @retval None
    471            */
    472          INTERRUPT_HANDLER(TIM6_UPD_OVF_TRG_IRQHandler, 23)
    473           {
    474            /* In order to detect unexpected events during development,
    475               it is recommended to set a breakpoint on the following instruction.
    476            */
    477           }
    478          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF52Ax or STM8AF62Ax or STM8AF626x */
    479          /**
    480            * @brief Timer4 Update/Overflow Interrupt routine.
    481            * @param  None
    482            * @retval None
    483            */

   \                                 In section .far_func.text, align 1
    484           INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 23)
    485           {
    486            /* In order to detect unexpected events during development,
    487               it is recommended to set a breakpoint on the following instruction.
    488            */
    489           }
   \                     TIM4_UPD_OVF_IRQHandler:
   \                     _interrupt_25:
   \   000000 80                    IRET
    490          #endif /*STM8S903*/
    491          
    492          /**
    493            * @brief Eeprom EEC Interrupt routine.
    494            * @param  None
    495            * @retval None
    496            */

   \                                 In section .far_func.text, align 1
    497          INTERRUPT_HANDLER(EEPROM_EEC_IRQHandler, 24)
    498          {
    499            /* In order to detect unexpected events during development,
    500               it is recommended to set a breakpoint on the following instruction.
    501            */
    502          }
   \                     EEPROM_EEC_IRQHandler:
   \                     _interrupt_26:
   \   000000 80                    IRET
    503          
    504          /**
    505            * @}
    506            */
    507          
    508          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     index                             1
     TRAP_IRQHandler                   1
     TLI_IRQHandler                    1
     AWU_IRQHandler                    1
     CLK_IRQHandler                    1
     EXTI_PORTA_IRQHandler             1
     EXTI_PORTB_IRQHandler             1
     EXTI_PORTC_IRQHandler             1
     EXTI_PORTD_IRQHandler             1
     EXTI_PORTE_IRQHandler             1
     SPI_IRQHandler                    1
     TIM1_UPD_OVF_TRG_BRK_IRQHandler
                                       1
     TIM1_CAP_COM_IRQHandler           1
     TIM2_UPD_OVF_BRK_IRQHandler      43
     TIM2_CAP_COM_IRQHandler           1
     TIM3_UPD_OVF_BRK_IRQHandler       1
     TIM3_CAP_COM_IRQHandler           1
     I2C_IRQHandler                    1
     UART2_TX_IRQHandler               1
     UART2_RX_IRQHandler              37
     ADC1_IRQHandler                  87
     TIM4_UPD_OVF_IRQHandler           1
     EEPROM_EEC_IRQHandler             1

 
 186 bytes in section .far_func.text
   1 byte  in section .near.bss
 
 186 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: 1
